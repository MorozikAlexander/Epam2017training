/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
/**
 *
 * @author MZ
 */
public class PhoneBookUI extends javax.swing.JFrame {

    /**
     * Creates new form PhoneBookUI
     */
    public PhoneBookUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Phone Book");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Database"));
        jPanel1.setToolTipText("");

        jButton1.setText("Start base");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close base");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Phone number", "F I O", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Phone number");

        jLabel3.setText("F I O");

        jLabel4.setText("Address");

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Apply");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Delete");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Search by number");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Search by F I O");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Search by Address");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(214, 214, 214))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton6)
                            .addComponent(jButton7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jToggleButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RefreshTable() {
        try {
            rs = stmt.executeQuery("select * from phonebook");
            
            dtm = (DefaultTableModel) jTable1.getModel();//получили модель таблицы (с колонками, в часности)
            dtm.setRowCount(0);//удалили все строки
            while (rs.next()) {//проходим по результ сэту
                Vector<Object> row = new Vector<Object>();//создаем вектор для представления строки таблицы
                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {//проходим по всем колонкам результ сэта
                    row.add(rs.getObject(i));//добавляем данные из rs в вектор
                }
                dtm.addRow(row);//добавляем в таблицу вектор
            }        
        } catch (SQLException ex) {
            Logger.getLogger(PhoneBookUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Start Base:        
        try {
            Class.forName("org.h2.Driver");
            conn = DriverManager.getConnection("jdbc:h2:file://d:\\test\\testbase", "admin", "admin");           
            
            try {
                stmt = conn.createStatement();
            } catch (SQLException ex) {
                //Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
            }
            RefreshTable();                           
        } catch (ClassNotFoundException | SQLException ex) {
            //Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Stop Base:
                try {                    
                    if (conn != null) conn.close();
                    if (stmt != null) stmt.close();
                    if (rs != null) rs.close();                    
                } catch (SQLException ex) {
                    //Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
                }                
                System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
                try {                    
                    if (conn != null) conn.close();
                    if (stmt != null) stmt.close();
                    if (rs != null) rs.close();                    
                } catch (SQLException ex) {
                    //Logger.getLogger(Start.class.getName()).log(Level.SEVERE, null, ex);
                }        
    }//GEN-LAST:event_formWindowClosing

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if (conn == null) JOptionPane.showMessageDialog(null, "Connect to the base!");
        else {
            int s2 = jTable1.getSelectedRow();
            
            if (s2 < 0) JOptionPane.showMessageDialog(null, "Select item!");
            else {
                try {
                    int wd = Integer.parseInt(jTextField1.getText());
                    stmt.executeUpdate("delete from phonebook where number = "+ wd +"");
                    RefreshTable();
                } catch (SQLException ex) {
                    Logger.getLogger(PhoneBookUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int sl = jTable1.getSelectedRow();                
        jTextField1.setText((jTable1.getValueAt(sl, 0)).toString());
        jTextField4.setText((jTable1.getValueAt(sl, 1)).toString());
        jTextField5.setText((jTable1.getValueAt(sl, 2)).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (conn == null) JOptionPane.showMessageDialog(null, "Connect to the base!");
        else {
            String pn = jTextField1.getText();
            String fi = jTextField4.getText();
            String ad = jTextField5.getText();
            int pni = -1;
            if ((pn.length() == 0) || (fi.length() == 0) || (ad.length() == 0))
                JOptionPane.showMessageDialog(null, "Fill all values!");
            else {
                try {
                    pni = Integer.parseInt(jTextField1.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Phone number needs integer!");
                    pni = 0;
                }    

                
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    int ii = Integer.parseInt(jTable1.getValueAt(i, 0).toString());
                    if (pni == ii) {
                        pni = 0;
                        JOptionPane.showMessageDialog(null, "Phone number must be unique!");
                    }
                }
                
                if (pni > 0) {
                    try {
                        //rs = stmt.executeQuery("select * from phonebook");
                        //"INSERT INTO ROOT.LISTUSER (ID, NAME) VALUES (7, 'User7')"                        
                        stmt.executeUpdate("insert into phonebook values ("+ pn +", '"+ fi +"', '"+ ad +"')");
                        RefreshTable();
                    } catch (SQLException ex) {
                        Logger.getLogger(PhoneBookUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (conn == null) JOptionPane.showMessageDialog(null, "Connect to the base!");
        else {
            String pn = jTextField1.getText();
            String fi = jTextField4.getText();
            String ad = jTextField5.getText();
            int pni = -1;
            if ((pn.length() == 0) || (fi.length() == 0) || (ad.length() == 0))
                JOptionPane.showMessageDialog(null, "Fill all values!");
            else {
                try {
                    pni = Integer.parseInt(jTextField1.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Phone number needs integer!");
                    pni = 0;
                }
                
                int s2 =Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            
                if (s2 < 0) JOptionPane.showMessageDialog(null, "Select item!");
                else {                
                    int wd = Integer.parseInt(jTextField1.getText());
                    if (pni > 0){
                        try {

                        stmt.executeUpdate("update phonebook set number = "+ pni +", fio = '"+ fi +"', address = '"+ ad +"' where number = "+ s2 +"");
                        RefreshTable();
                    } catch (SQLException ex) {
                        Logger.getLogger(PhoneBookUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            }
        }       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (conn == null) JOptionPane.showMessageDialog(null, "Connect to the base!");
        else {
            String pn = jTextField1.getText();
            String fi = jTextField4.getText();
            String ad = jTextField5.getText();
            int pni = -1;
            if ((pn.length() == 0))
                JOptionPane.showMessageDialog(null, "Fill number value!");
            else {
                try {
                    pni = Integer.parseInt(jTextField1.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Phone number needs integer!");
                    pni = 0;
                }
                    if (pni > 0){
                        try {
                            rs = stmt.executeQuery("select * from phonebook where number = "+ pni+"");
                            dtm = (DefaultTableModel) jTable1.getModel();//получили модель таблицы (с колонками, в часности)
                            dtm.setRowCount(0);//удалили все строки
                            while (rs.next()) {//проходим по результ сэту
                                Vector<Object> row = new Vector<Object>();//создаем вектор для представления строки таблицы
                                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {//проходим по всем колонкам результ сэта
                                    row.add(rs.getObject(i));//добавляем данные из rs в вектор
                                }
                                dtm.addRow(row);//добавляем в таблицу вектор
                            }        
                        } catch (SQLException ex) {
                            Logger.getLogger(PhoneBookUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }            
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (conn == null) JOptionPane.showMessageDialog(null, "Connect to the base!");
        else {            
            String fi = jTextField4.getText();                        
            if  (fi.length() == 0)
                JOptionPane.showMessageDialog(null, "Fill FIO value!");
            else {
                        try {
                            rs = stmt.executeQuery("select * from phonebook where fio = "+ fi +"");
                            dtm = (DefaultTableModel) jTable1.getModel();//получили модель таблицы (с колонками, в часности)
                            dtm.setRowCount(0);//удалили все строки
                            while (rs.next()) {//проходим по результ сэту
                                Vector<Object> row = new Vector<Object>();//создаем вектор для представления строки таблицы
                                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {//проходим по всем колонкам результ сэта
                                    row.add(rs.getObject(i));//добавляем данные из rs в вектор
                                }
                                dtm.addRow(row);//добавляем в таблицу вектор
                            }        
                        } catch (SQLException ex) {
                            Logger.getLogger(PhoneBookUI.class.getName()).log(Level.SEVERE, null, ex);
                        }                  
            }
        }        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (conn == null) JOptionPane.showMessageDialog(null, "Connect to the base!");
        else {
            String ad = jTextField5.getText();
            if (ad.length() == 0)
                JOptionPane.showMessageDialog(null, "Fill Address value!");
            else {                  
                        try {
                            rs = stmt.executeQuery("select * from phonebook where address = "+ ad +"");
                            dtm = (DefaultTableModel) jTable1.getModel();//получили модель таблицы (с колонками, в часности)
                            dtm.setRowCount(0);//удалили все строки
                            while (rs.next()) {//проходим по результ сэту
                                Vector<Object> row = new Vector<Object>();//создаем вектор для представления строки таблицы
                                for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {//проходим по всем колонкам результ сэта
                                    row.add(rs.getObject(i));//добавляем данные из rs в вектор
                                }
                                dtm.addRow(row);//добавляем в таблицу вектор
                            }        
                        } catch (SQLException ex) {
                            Logger.getLogger(PhoneBookUI.class.getName()).log(Level.SEVERE, null, ex);
                        }                  
            }
        }                
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhoneBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhoneBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhoneBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhoneBookUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhoneBookUI().setVisible(true);
            }
        });
    }

    public Connection conn = null;
    public Statement stmt = null;
    public ResultSet rs = null;
    public DefaultTableModel dtm =null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
